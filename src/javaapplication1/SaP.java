/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;
/**
 *
 * @author Usuario
 */
public class SaP extends javax.swing.JFrame {
    
    static final String Negacion ="No";
    static final String Conjuncion ="Y";
    static final String Disyuncion ="O";
    static final String Condicional_si ="Si ";
    static final String Condicional_entonces ="Entonces";
    static final String BiCondicional ="Si y Solo Si";
    
    /**
     * Creates new form SaP
     */
    public SaP() {
        initComponents();
        setLocationRelativeTo(null); //funcion para mostrar en el centro
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textQ = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ingreSimbolos = new javax.swing.JTextField();
        btnConvertir = new javax.swing.JButton();
        btnP = new javax.swing.JButton();
        btnQ = new javax.swing.JButton();
        btnNegacion = new javax.swing.JButton();
        btnDisyuncion = new javax.swing.JButton();
        btnCojuncion = new javax.swing.JButton();
        btnCondicion = new javax.swing.JButton();
        btnBiCondicional = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaConvertida = new javax.swing.JTextArea();
        btnAbrirParentesis = new javax.swing.JButton();
        btnCerrarParentesis = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("P :");

        textP.setEditable(false);
        textP.setText("Es un día soleado ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Q :");

        textQ.setEditable(false);
        textQ.setText("Hace calor");

        jLabel3.setText("Ingrese los símbolos");

        ingreSimbolos.setEditable(false);
        ingreSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingreSimbolosActionPerformed(evt);
            }
        });

        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        btnP.setText("P");
        btnP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActionPerformed(evt);
            }
        });

        btnQ.setText("Q");
        btnQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQActionPerformed(evt);
            }
        });

        btnNegacion.setText("¬");
        btnNegacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegacionActionPerformed(evt);
            }
        });

        btnDisyuncion.setText("v");
        btnDisyuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisyuncionActionPerformed(evt);
            }
        });

        btnCojuncion.setText("^");
        btnCojuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCojuncionActionPerformed(evt);
            }
        });

        btnCondicion.setText("->");
        btnCondicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCondicionActionPerformed(evt);
            }
        });

        btnBiCondicional.setText("<->");
        btnBiCondicional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBiCondicionalActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        AreaConvertida.setEditable(false);
        AreaConvertida.setColumns(20);
        AreaConvertida.setRows(5);
        jScrollPane1.setViewportView(AreaConvertida);

        btnAbrirParentesis.setText("(");
        btnAbrirParentesis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirParentesisActionPerformed(evt);
            }
        });

        btnCerrarParentesis.setText(")");
        btnCerrarParentesis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarParentesisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAbrirParentesis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnCerrarParentesis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnNegacion)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisyuncion)
                        .addGap(18, 18, 18)
                        .addComponent(btnCojuncion)
                        .addGap(18, 18, 18)
                        .addComponent(btnCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBiCondicional, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textP, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(btnConvertir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textQ, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDelete)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(160, 160, 160)
                                    .addComponent(jLabel3))
                                .addComponent(ingreSimbolos, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textQ, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCojuncion)
                    .addComponent(btnDisyuncion)
                    .addComponent(btnNegacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnQ)
                    .addComponent(btnP)
                    .addComponent(btnCondicion)
                    .addComponent(btnBiCondicional))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnAbrirParentesis)
                    .addComponent(btnCerrarParentesis))
                .addGap(18, 18, 18)
                .addComponent(ingreSimbolos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConvertir)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingreSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingreSimbolosActionPerformed
      
    }//GEN-LAST:event_ingreSimbolosActionPerformed

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Presentacion mover = new Presentacion();
        mover.setVisible(true); //nos cambiamos de ventana
        this.setVisible(false); //ocultamos el jframe de tablas
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        /*
        Se tomara el string que este dentro de la ventana ingreSimbolo y borrara el ultimo caracter de esa cadena
        para ello necesitaremos crear una variable local en la funcion de nuestro boton delete y utilizaremos
        substring para borrar el ultimo caracter de la cadena
        */
        
        String cadena = ingreSimbolos.getText().trim(); //utlizamos una varible string para guardar
        
        /*
        Usamos la funcion getLasN para obtener los ultimos tres caracteres de una cadena y lo comparamos con lo que buscamos
        si esto se cumple borramos los ultimos tres caracteres
        */
        
        if(getLastN(cadena,3).equals("<->")){
            
            cadena = cadena.substring(0, cadena.length()-3);
        }
        else if (getLastN(cadena,2).equals("->")){
            
            cadena = cadena.substring(0, cadena.length()-2);
        }
        /*
            Con esta condicion validamos que si el string ya no contiene nada no le seguimos restando
            de lo contrario de restamos 1
        */
        else if (cadena.length() > 0){ 
            cadena = cadena.substring(0, cadena.length()-1); //borramos el ultimo caracter de la cadena
        }
        
        this.ingreSimbolos.setText(cadena); //mostramos lo que hay dentro del string en la pantalla 
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActionPerformed
        /*
        Con el set text mostramos dentro de la pantalla de nombre ingrese simbolos
        y con el get text obtenemos la cadena que ya tiene y le concatenamos P para que no se borre lo anterior
        ingresado
        */
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"P"); 
    }//GEN-LAST:event_btnPActionPerformed

    private void btnQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"Q");
    }//GEN-LAST:event_btnQActionPerformed

    private void btnNegacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegacionActionPerformed
         this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"¬"); 
    }//GEN-LAST:event_btnNegacionActionPerformed

    private void btnDisyuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisyuncionActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"v"); 
    }//GEN-LAST:event_btnDisyuncionActionPerformed

    private void btnCojuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCojuncionActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"^"); 
    }//GEN-LAST:event_btnCojuncionActionPerformed

    private void btnCondicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCondicionActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"->"); 
    }//GEN-LAST:event_btnCondicionActionPerformed

    private void btnBiCondicionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBiCondicionalActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"<->"); 
    }//GEN-LAST:event_btnBiCondicionalActionPerformed

    private void btnAbrirParentesisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirParentesisActionPerformed
       this.ingreSimbolos.setText(this.ingreSimbolos.getText()+"(");
    }//GEN-LAST:event_btnAbrirParentesisActionPerformed

    private void btnCerrarParentesisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarParentesisActionPerformed
        this.ingreSimbolos.setText(this.ingreSimbolos.getText()+")");
    }//GEN-LAST:event_btnCerrarParentesisActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        
        String simbolos = ingreSimbolos.getText().trim();
        String acumulador = "";
        String verificar = "";
        String verificarCondicional = "";
        String Proposiciones = "";
        boolean opc = true;
        
        for (int i = 0; i < simbolos.length(); i++){
            
            /*
            Segun los resultados de usar substring, usamos el 0 para dar un rango,anque este se encuentre vacio
            ejemplo
            cadena PV
            en la primera iretacion acumulador guarda solo P que se encuentra en el rango de 0,1 siendo p 1
            en la segundo iteracion acumulador guarda PV ya que guarda valores en el rango de 0,2 siendo v 2
            */
            acumulador = simbolos.substring(0,i+1); 


            //para cuando tomemos valores de bicondicional y condicional 
            if (i > 1){        
                /*
                Tomamos los ultimos tres caracteres ya que el bicondicional usa tres cracteres <-> le debemos dar mayor
                prioridad que al condicional ya que este comparte caracteres iguales ->
                */
                verificar = getLastN(acumulador,3); 
                
                verificarCondicional = verificar.substring(0,1);
            }
            else{
                 verificar = getLastN(acumulador,1); 
                // Tomamos solo un caracter para cuando los valores de i esten entre 0-2, por la cuestion de los caracteres 
                //ya que el acumulador no puede estar tomando datos que no existen 
            }


            acumulador = ""; //limpiar el acumulador 
            /*
            Cuando i > 2 todav[ia estaremos necesitando validar un caracter para los demas operadores por eso lo 
            limitamos al ultimo caracter que verificar tom
            */
            if (getLastN(verificar,1).equals("¬")){

                Proposiciones += (Negacion + " ");
            }
            else if(getLastN(verificar,1).equals("P")){

                Proposiciones += (textP.getText().trim() + " ");

            }else if (getLastN(verificar,1).equals("Q")){

                Proposiciones += (textQ.getText().trim() + " ");

            }else if (getLastN(verificar,1).equals("v")){

                Proposiciones += (Disyuncion + " ");

            }else if(getLastN(verificar,1).equals("^")){

                Proposiciones += (Conjuncion + " ");

            }else if(verificar.equals("<->")){

                Proposiciones += (BiCondicional + " ");
                
            }else if(getLastN(verificar,2).equals("->") && verificarCondicional.equals("<") == false){

                Proposiciones = (Condicional_si + Proposiciones + Condicional_entonces + " ");
            }
                
                
            /*}else{
                
                AreaConvertida.setText("Entrada inválida");
                opc = false;
                break;
            }*/
            
            
        }
        
        //if (opc == true){
            AreaConvertida.setText(Proposiciones);
        //}
                   
    }//GEN-LAST:event_btnConvertirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaP().setVisible(true);
            }
        });
    }
    
   //Funcion que usa un substring para retornar los ultimos valores de una cadena 
    
   public String getLastN(String s, int n) {
        if (s == null || n > s.length()) {
            return s;
        }
        return s.substring(s.length() - n); 
    }
   
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaConvertida;
    private javax.swing.JButton btnAbrirParentesis;
    private javax.swing.JButton btnBiCondicional;
    private javax.swing.JButton btnCerrarParentesis;
    private javax.swing.JButton btnCojuncion;
    private javax.swing.JButton btnCondicion;
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisyuncion;
    private javax.swing.JButton btnNegacion;
    private javax.swing.JButton btnP;
    private javax.swing.JButton btnQ;
    private javax.swing.JTextField ingreSimbolos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textP;
    private javax.swing.JTextField textQ;
    // End of variables declaration//GEN-END:variables
}
